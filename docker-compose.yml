version: '3.8'

services:
  # DriveCast Service 애플리케이션
  drivecast-service:
    build: .
    container_name: drivecast-service
    ports:
      - "8080:8080"
    environment:
      # Spring Profile
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}

      # 내부 캐시용 Redis
      - CACHE_REDIS_HOST=${CACHE_REDIS_HOST:-redis-cache}
      - CACHE_REDIS_PORT=${CACHE_REDIS_PORT:-6379}
      - CACHE_REDIS_PASSWORD=${CACHE_REDIS_PASSWORD:-}

      # MySQL Database
      - DB_HOST=${DB_HOST:-mysql-db}
      - DB_NAME=${DB_NAME:-drivecast}
      - DB_USER=${DB_USER:-drivecast}
      - DB_PASSWORD=${DB_PASSWORD}

      # OpenFeign
      - CLIENT_USER=${CLIENT_USER}
      - CLIENT_DRIVING_ANALYSIS=${CLIENT_DRIVING_ANALYSIS}

      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400000}

      # Valkey (위치 데이터용)
      - VALKEY_HOST=${VALKEY_HOST:-valkey}
      - VALKEY_PORT=${VALKEY_PORT:-6379}
      - VALKEY_PASSWORD=${VALKEY_PASSWORD:-}

      # Twilio SMS Configuration
      - TWILIO_SID=${TWILIO_SID}
      - TWILIO_TOKEN=${TWILIO_TOKEN}
      - TWILIO_NUMBER=${TWILIO_NUMBER}
      - TWILIO_TEST_NUMBER=${TWILIO_TEST_NUMBER}

    depends_on:
      mysql-db:
        condition: service_healthy
      redis-cache:
        condition: service_started
    networks:
      - drivecast-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 내부 캐시용 Redis
  redis-cache:
    image: redis:7-alpine
    container_name: redis-cache
    volumes:
      - redis-cache-data:/data
    networks:
      - drivecast-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

#  # 위치 데이터용 Valkey (Redis 호환) - AWS ElasticCache 사용시 주석 처리
#  valkey:
#    image: valkey/valkey:7.2-alpine
#    container_name: valkey
#    volumes:
#      - valkey-data:/data
#    networks:
#      - drivecast-network
#    restart: unless-stopped
#    command: valkey-server --appendonly yes
#    healthcheck:
#      test: ["CMD", "valkey-cli", "ping"]
#      interval: 10s
#      timeout: 3s
#      retries: 3
#    profiles:
#      - local # 로컬 개발시에만 실행

  # MySQL Database
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME:-drivecast}
      - MYSQL_USER=${DB_USER:-drivecast}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - drivecast-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  drivecast-network:
    driver: bridge

volumes:
  redis-cache-data:
  valkey-data:
  mysql-data:
